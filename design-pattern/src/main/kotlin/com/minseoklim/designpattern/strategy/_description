가격 할인 알고리즘(계산 방법)을 추상화하고 있는 DiscountStrategy를 전략(Strategy)이라고 부르고
가격 계산 기능 자체의 책임을 갖고 있는 Calculator를 콘텍스트(Context)라고 부른다.
이렇게 특정 콘텍스트에서 알고리즘(전략)을 인터페이스를 통해 별도로 분리해내는 설계 방법이 전략 패턴이다.

전략 패턴에서 콘텍스트는 사용할 전략을 직접 선택하지 않고, 콘텍스트의 클라이언트가 DI를 통해 전달해준다.

전략 패턴의 이점은 콘텍스트 코드의 변경 없이 새로운 전략을 추가할 수 있다는 점이다.
이는 확장에는 열려있고 변경에는 닫혀있다는 개방 폐쇄 원칙(OCP)을 따르는 설계이다.

비슷한 코드를 실행하는 if-else 블록은 전략 패턴을 적용할 수 있는 대표적인 리팩토링 대상이다.
